{"version":3,"file":"static/js/558.7ac24fea.chunk.js","mappings":"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","sources":["services/pdfGenerator.js"],"sourcesContent":["// src/services/pdfGenerator.js - GERADOR PDF COM LAYOUT OTIMIZADO E COMPRESSÃO\nclass PDFGenerator {\n  constructor() {\n    this.jsPDFLoaded = false;\n  }\n\n  // Carregar jsPDF se não estiver disponível\n  async loadJsPDF() {\n    if (this.jsPDFLoaded && window.jspdf) {\n      return true;\n    }\n\n    try {\n      if (!window.jspdf) {\n        console.log('📥 Carregando jsPDF...');\n        await new Promise((resolve, reject) => {\n          const script = document.createElement('script');\n          script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js';\n          script.onload = resolve;\n          script.onerror = () => reject(new Error('Falha ao carregar jsPDF'));\n          document.head.appendChild(script);\n        });\n      }\n      \n      this.jsPDFLoaded = true;\n      console.log('✅ jsPDF carregado com sucesso');\n      return true;\n    } catch (error) {\n      console.error('❌ Erro ao carregar jsPDF:', error);\n      throw new Error('Não foi possível carregar o gerador de PDF');\n    }\n  }\n\n  // ========== NOVA FUNÇÃO DE COMPRESSÃO ==========\n  async comprimirPDF(doc) {\n    try {\n      console.log('🗜️ Iniciando compressão do PDF...');\n\n      // Obter array buffer do PDF original\n      const pdfArrayBuffer = doc.output('arraybuffer');\n      const originalSize = pdfArrayBuffer.byteLength;\n      console.log(`📦 Tamanho original: ${(originalSize / 1024).toFixed(2)} KB`);\n\n      // Técnica 1: Comprimir usando deflate interno do jsPDF\n      if (doc.internal && doc.internal.deflate) {\n        try {\n          doc.internal.deflate = true;\n          console.log('✅ Compressão deflate ativada');\n        } catch (e) {\n          console.warn('⚠️ Deflate não disponível:', e.message);\n        }\n      }\n\n      // Técnica 2: Otimizar imagens já carregadas\n      await this.otimizarImagensExistentes(doc);\n\n      // Técnica 3: Comprimir fontes (remover dados desnecessários)\n      this.otimizarFontes(doc);\n\n      // Técnica 4: Remover metadados desnecessários\n      this.removerMetadadosDesnecessarios(doc);\n\n      // Obter tamanho após otimizações\n      const pdfComprimido = doc.output('arraybuffer');\n      const compressedSize = pdfComprimido.byteLength;\n      const economiaBytes = originalSize - compressedSize;\n      const economiaPercentual = ((economiaBytes / originalSize) * 100).toFixed(1);\n\n      console.log(`📦 Tamanho comprimido: ${(compressedSize / 1024).toFixed(2)} KB`);\n      console.log(`💾 Economia: ${(economiaBytes / 1024).toFixed(2)} KB (${economiaPercentual}%)`);\n\n      return doc;\n    } catch (error) {\n      console.warn('⚠️ Erro na compressão (continuando com PDF original):', error);\n      return doc;\n    }\n  }\n\n  // Otimizar imagens existentes no PDF\n  async otimizarImagensExistentes(doc) {\n    try {\n      if (doc.internal && doc.internal.pageSize) {\n        console.log('🖼️ Otimizando imagens...');\n        \n        // Configurar compressão de imagens\n        if (doc.internal.scaleFactor) {\n          doc.internal.scaleFactor = Math.min(doc.internal.scaleFactor, 2);\n        }\n        \n        // Definir qualidade de compressão para imagens JPEG\n        if (doc.setImageProperties) {\n          doc.setImageProperties = function(imageData) {\n            if (imageData && typeof imageData === 'object') {\n              imageData.compression = 'FAST';\n              imageData.quality = 0.7; // 70% de qualidade\n            }\n          };\n        }\n      }\n    } catch (error) {\n      console.warn('⚠️ Erro ao otimizar imagens:', error);\n    }\n  }\n\n  // Otimizar fontes\n  otimizarFontes(doc) {\n    try {\n      console.log('🔤 Otimizando fontes...');\n      \n      if (doc.internal && doc.internal.events && doc.internal.events.subscribe) {\n        // Limitar conjunto de caracteres das fontes (se possível)\n        doc.internal.events.subscribe('addFont', function(font) {\n          if (font && font.metadata) {\n            // Remover metadados desnecessários da fonte\n            delete font.metadata.description;\n            delete font.metadata.version;\n            delete font.metadata.trademark;\n          }\n        });\n      }\n    } catch (error) {\n      console.warn('⚠️ Erro ao otimizar fontes:', error);\n    }\n  }\n\n  // Remover metadados desnecessários\n  removerMetadadosDesnecessarios(doc) {\n    try {\n      console.log('🧹 Removendo metadados desnecessários...');\n      \n      if (doc.internal && doc.internal.events) {\n        // Definir apenas metadados essenciais\n        doc.setProperties({\n          title: 'Proposta Comercial',\n          creator: 'AUPUS',\n          producer: 'AUPUS PDF Generator',\n          // Remover campos opcionais como: keywords, subject, author details\n        });\n        \n        // Remover comentários e anotações desnecessárias\n        if (doc.internal.annotations) {\n          doc.internal.annotations = doc.internal.annotations.filter(annotation => \n            annotation.type === 'text' || annotation.type === 'link'\n          );\n        }\n      }\n    } catch (error) {\n      console.warn('⚠️ Erro ao remover metadados:', error);\n    }\n  }\n\n  // Função principal para gerar PDF COM COMPRESSÃO\n  async gerarPDF(dadosProposta, autoDownload = true) {\n    try {\n      console.log('📄 Iniciando geração de PDF...', dadosProposta.numeroProposta);\n      \n      // Carregar jsPDF\n      await this.loadJsPDF();\n      \n      const { jsPDF } = window.jspdf;\n      \n      // Criar PDF com configurações otimizadas\n      const doc = new jsPDF({\n        orientation: 'p',\n        unit: 'mm',\n        format: 'a4',\n        compress: true, // ✅ HABILITAR COMPRESSÃO NATIVA\n        encryption: {\n          userPassword: '',\n          ownerPassword: '',\n          userPermissions: []\n        }\n      });\n\n      // Gerar conteúdo do PDF\n      await this.criarLayoutPDF(doc, dadosProposta);\n\n      // ✅ APLICAR COMPRESSÃO ANTES DE FINALIZAR\n      const docComprimido = await this.comprimirPDF(doc);\n\n      // Gerar nome do arquivo\n      const nomeArquivo = this.gerarNomeArquivo(dadosProposta);\n\n      // Baixar automaticamente se solicitado\n      if (autoDownload) {\n        docComprimido.save(nomeArquivo);\n        console.log('✅ PDF baixado:', nomeArquivo);\n      }\n\n      // Calcular tamanho final\n      const finalArrayBuffer = docComprimido.output('arraybuffer');\n      const finalSizeKB = (finalArrayBuffer.byteLength / 1024).toFixed(2);\n      console.log(`📊 Tamanho final do PDF: ${finalSizeKB} KB`);\n\n      return {\n        nomeArquivo,\n        pdfBlob: docComprimido.output('blob'),\n        pdfDataUri: docComprimido.output('datauristring'),\n        tamanhoKB: finalSizeKB,\n        success: true\n      };\n\n    } catch (error) {\n      console.error('❌ Erro ao gerar PDF:', error);\n      throw error;\n    }\n  }\n\n  // Função para comprimir imagens - PRESERVANDO TRANSPARÊNCIA\n  async comprimirImagem(imageSrc, maxWidth = 800, qualidade = 0.7, preservarTransparencia = false) {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      \n      img.onload = function() {\n        try {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          \n          // Calcular novas dimensões mantendo proporção\n          let { width, height } = img;\n          if (width > maxWidth) {\n            height = (height * maxWidth) / width;\n            width = maxWidth;\n          }\n          \n          canvas.width = width;\n          canvas.height = height;\n          \n          // Se preservar transparência, não preencher fundo\n          if (!preservarTransparencia) {\n            // Fundo branco para imagens JPEG\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, width, height);\n          }\n          \n          // Desenhar imagem redimensionada\n          ctx.drawImage(img, 0, 0, width, height);\n          \n          // Escolher formato baseado na transparência\n          let dataURL;\n          let formato;\n          \n          if (preservarTransparencia) {\n            // PNG para manter transparência (logos)\n            dataURL = canvas.toDataURL('image/png');\n            formato = 'PNG';\n            console.log(`🖼️ Logo redimensionada (PNG transparente): ${width}x${height}`);\n          } else {\n            // JPEG com compressão para outras imagens\n            dataURL = canvas.toDataURL('image/jpeg', qualidade);\n            formato = 'JPEG';\n            console.log(`🖼️ Imagem comprimida (JPEG): ${width}x${height} (qualidade: ${qualidade * 100}%)`);\n          }\n          \n          resolve({\n            dataURL,\n            width,\n            height,\n            aspectRatio: width / height,\n            formato\n          });\n          \n        } catch (error) {\n          reject(error);\n        }\n      };\n      \n      img.onerror = () => reject(new Error(`Falha ao carregar imagem: ${imageSrc}`));\n      img.src = imageSrc;\n    });\n  }\n\n  // Criar layout otimizado do PDF\n  async criarLayoutPDF(doc, dados) {\n    // Cores do tema\n    const corAzul = [44, 62, 80];\n    const corVerde = [76, 175, 80];\n    const corTexto = [60, 60, 60];\n\n    // Faixa preta preenchendo toda a página\n    doc.setDrawColor(...corAzul);\n    doc.setLineWidth(12);\n    doc.rect(1, 1, 208, 295, 'S');\n\n    let y = 10;\n\n    // === CABEÇALHO COM LOGO ===\n    y = await this.adicionarCabecalhoComLogo(doc, y, corAzul);\n\n    // === INFORMAÇÕES DO CLIENTE (COMPACTO) ===\n    y = this.adicionarInformacoesClienteCompacto(doc, dados, y, corTexto);\n\n    // === PLANO ECONOMIA (COMPACTO) ===\n    y = this.adicionarPlanoEconomiaCompacto(doc, dados, y, corTexto);\n\n    // === TABELA DE UNIDADES CONSUMIDORAS (ESPAÇO FIXO) ===\n    if (dados.ucs && dados.ucs.length > 0) {\n      y = this.adicionarTabelaUCs(doc, dados.ucs, y, corTexto);\n    }\n\n    // === GRÁFICO ECONOMIA 5 ANOS ===\n    if (dados.ucs && dados.ucs.length > 0 && dados.tarifaTributos) {\n      y = this.adicionarEconomia5Anos(doc, dados, y, corTexto, corVerde);\n    }\n\n    // === BENEFÍCIOS (ESPAÇO FIXO) ===\n    if (dados.beneficios && dados.beneficios.length > 0) {\n      y = this.adicionarBeneficiosCompactos(doc, dados.beneficios, y, corTexto);\n    }\n\n    // === RODAPÉ ===\n    await this.adicionarRodape(doc);\n  }\n\n  // Cabeçalho com logo PRESERVANDO TRANSPARÊNCIA\n  async adicionarCabecalhoComLogo(doc, y, corAzul) {\n    // Fundo azul\n    doc.setFillColor(...corAzul);\n    doc.rect(0, 0, 210, 18, 'F');\n\n    // Carregar logo MANTENDO transparência\n    try {\n      console.log('🖼️ Carregando logo (preservando transparência)...');\n      // ✅ PRESERVAR TRANSPARÊNCIA DA LOGO (PNG)\n      const logoOtimizada = await this.comprimirImagem('/Logo.png', 200, 0.8, true);\n      \n      // Calcular dimensões para PDF\n      const alturaDesejada = 10;\n      const larguraProporcional = alturaDesejada * logoOtimizada.aspectRatio;\n      const larguraMaxima = 35;\n      const larguraFinal = Math.min(larguraProporcional, larguraMaxima);\n      const alturaFinal = larguraFinal / logoOtimizada.aspectRatio;\n\n      // Adicionar logo como PNG (mantém transparência)\n      doc.addImage(logoOtimizada.dataURL, logoOtimizada.formato, 10, 4, larguraFinal, alturaFinal);\n      console.log(`📐 Logo adicionada (${logoOtimizada.formato}): ${larguraFinal.toFixed(1)}x${alturaFinal.toFixed(1)}mm`);\n      \n    } catch (error) {\n      // Fallback - mostrar texto em vez da logo\n      console.warn('📝 Usando fallback de texto para logo:', error.message);\n      doc.setTextColor(255, 255, 255);\n      doc.setFontSize(10);\n      doc.setFont('helvetica', 'bold');\n      doc.text('AUPUS', 15, 12);\n    }\n\n    // Título\n    doc.setTextColor(255, 255, 255);\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Projeção de eficiência econômica', 60, 12);\n\n    return 25;\n  }\n\n  // Informações do cliente - versão compacta COM LETRAS MAIORES\n  adicionarInformacoesClienteCompacto(doc, dados, y, corTexto) {\n    doc.setTextColor(...corTexto);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Cliente', 20, y);\n    y += 6; \n\n    y += 7;\n    doc.setFontSize(11); // Aumentado de 9 para 11\n    doc.setFont('helvetica', 'normal');\n\n    // Uma linha só com os três dados - LETRAS MAIORES\n    doc.setFont('helvetica', 'bold');\n    doc.setFontSize(10); \n    doc.text('Nome:', 25, y);\n    doc.setFont('helvetica', 'normal');\n    doc.setFontSize(10);\n    doc.text(dados.nomeCliente || '', 42, y);\n\n    doc.setFont('helvetica', 'bold');\n    doc.setFontSize(10);\n    doc.text('Proposta:', 110, y);\n    doc.setFont('helvetica', 'normal'); \n    doc.setFontSize(10);\n    doc.text(dados.numeroProposta || '', 133, y);\n\n    doc.setFont('helvetica', 'bold');\n    doc.setFontSize(10);\n    doc.text('Data:', 155, y);\n    doc.setFont('helvetica', 'normal');\n    doc.setFontSize(10);\n    const dataFormatada = dados.data ? new Date(dados.data).toLocaleDateString('pt-BR') : '';\n    doc.text(dataFormatada, 168, y);\n\n    doc.setDrawColor(160, 160, 160);\n    doc.setLineWidth(0.5);\n    doc.line(20, y + 8, 190, y + 8);\n\n    return y + 15;\n  }\n\n  // Plano economia - MODIFICADO COM FIDELIDADE E DESCONTO MAIS PRÓXIMO\n  adicionarPlanoEconomiaCompacto(doc, dados, y, corTexto) {\n    doc.setTextColor(...corTexto);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Plano Economia', 20, y);\n    y += 6;\n\n    y += 6;\n\n    const descontoTarifa = Math.round((dados.descontoTarifa || 0.2) * 100);\n\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(...corTexto); // Preto para \"Economia Esperada\"\n    doc.setFontSize(10);\n    doc.text('Economia Esperada:', 25, y);\n    \n    doc.setTextColor(76, 175, 80); // Verde para o valor\n    doc.setFontSize(20); \n    doc.text(`${descontoTarifa}%`, 73, y); // ALTERADO: de 90 para 73 (mais próximo)\n\n    // Adicionar Fidelidade: NÃO ao lado\n    doc.setTextColor(...corTexto); // Preto para \"Fidelidade:\"\n    doc.setFontSize(10);\n    doc.text('Fidelidade:', 120, y);\n    \n    doc.setTextColor(255, 0, 0); // Vermelho para \"NÃO\"\n    doc.setFont('helvetica', 'bold');\n    doc.text('NÃO', 150, y);\n\n    // Voltar cor normal\n    doc.setTextColor(...corTexto);\n    doc.setDrawColor(160, 160, 160);\n    doc.setLineWidth(0.5);\n    doc.line(20, y + 8, 190, y + 8);\n\n    return y + 15;\n  }\n\n  // Tabela de UCs expandida - COM LETRAS MAIORES\n  adicionarTabelaUCs(doc, ucs, y, corTexto) {\n    doc.setTextColor(...corTexto);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Unidades Consumidoras', 20, y);\n    y += 6;\n\n    const linhaAltura = 4;\n    const maxLinhas = 10;\n    const ucsParaMostrar = ucs.slice(0, maxLinhas);\n\n    // Cabeçalho da tabela\n    doc.setFillColor(70, 100, 130);\n    doc.rect(20, y, 170, 10, 'F');\n\n    doc.setFontSize(8); \n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(255, 255, 255);\n\n    // Cabeçalho com novos nomes\n    doc.text('Nome', 22, y + 3);\n    doc.text('Consumo', 55, y + 3);\n    doc.text('Sem', 85, y + 3);\n    doc.text('Com', 110, y + 3);  \n    doc.text('Taxa', 135, y + 3);\n    doc.text('Economia', 155, y + 3);\n    doc.text('Economia', 175, y + 3);\n\n    // Segunda linha do cabeçalho\n    doc.text('', 22, y + 7);\n    doc.text('', 55, y + 7);\n    doc.text('Assinatura', 85, y + 7);\n    doc.text('Assinatura', 110, y + 7);\n    doc.text('Fixa', 135, y + 7);\n    doc.text('Mensal', 155, y + 7);\n    doc.text('Anual', 175, y + 7);\n\n    doc.setTextColor(...corTexto);\n    y += 10;\n\n    // Função para calcular taxa fixa (tarifa mínima)\n    const calcularTaxaFixa = (ligacao) => {\n      switch (ligacao?.toUpperCase()) {\n        case 'TRIFÁSICA':\n        case 'TRIFASICA':\n          return 112;\n        case 'BIFÁSICA':\n        case 'BIFASICA':\n          return 62;\n        case 'MONOFÁSICA':\n        case 'MONOFASICA':\n        default:\n          return 42;\n      }\n    };\n\n    doc.setFontSize(8.5);\n    doc.setFont('helvetica', 'normal');\n\n    // Linhas da tabela com cálculos\n    ucsParaMostrar.forEach((uc, index) => {\n      if (index % 2 === 1) {\n        doc.setFillColor(248, 248, 248);\n        doc.rect(20, y, 170, linhaAltura, 'F');\n      }\n\n      const consumo = parseFloat(uc.consumo) || 0;\n      const tarifa = 0.8;\n      const desconto = 0.2;\n      \n      // Cálculos\n      const semAssinatura = consumo * tarifa; // Valor Distribuidora\n      const economiaMensal = consumo * tarifa * desconto;\n      const economiaAnual = economiaMensal * 12;\n      const comAssinatura = consumo * tarifa * (1 - desconto); // Contribuição\n      const taxaFixa = calcularTaxaFixa(uc.ligacao);\n\n      const nomeUC = (uc.apelido || `UC ${index + 1}`).substring(0, 12);\n\n      // Dados COM UNIDADES nas linhas\n      doc.text(nomeUC, 22, y + 3);\n      doc.text(`${consumo.toFixed(0)} kWh`, 55, y + 3);\n      doc.text(`R$ ${semAssinatura.toFixed(0)}`, 85, y + 3);\n      doc.text(`R$ ${comAssinatura.toFixed(0)}`, 110, y + 3);\n      doc.text(`R$ ${taxaFixa}`, 135, y + 3);\n      doc.text(`R$ ${economiaMensal.toFixed(0)}`, 155, y + 3);\n      doc.text(`R$ ${economiaAnual.toFixed(0)}`, 175, y + 3);\n\n      y += linhaAltura;\n    });\n\n    if (ucs.length > maxLinhas) {\n      doc.setFontSize(6);\n      doc.setTextColor(180, 0, 0);\n      doc.text(`+ ${ucs.length - maxLinhas} unidades adicionais`, 22, y + 2);\n      y += 4;\n    }\n\n    doc.setDrawColor(160, 160, 160);\n    doc.setLineWidth(0.5);\n    doc.line(20, y + 8, 190, y + 8);\n\n    return y + 15;\n  }\n\n  // Calcular economia por UC para os próximos 5 anos\n  calcularEconomia5Anos(uc, tarifaTributos, descontoTarifa, inflacao) {\n    const consumo = parseFloat(uc.consumo) || 0;\n    const tarifa = parseFloat(tarifaTributos) || 0.8;\n    const desconto = parseFloat(descontoTarifa) || 0.2;\n    const inflacaoDecimal = parseFloat(inflacao) || 0.02;\n\n    if (consumo === 0 || tarifa === 0) {\n      return Array(5).fill(0);\n    }\n\n    const economiaMensal = consumo * tarifa * desconto;\n    const economias = [];\n    let economiaAno = economiaMensal * 12;\n    \n    for (let ano = 1; ano <= 5; ano++) {\n      economias.push(economiaAno);\n      economiaAno = economiaAno * (1 + inflacaoDecimal);\n    }\n\n    return economias;\n  }\n\n  calcularEconomiaConsolidada(ucs, tarifaTributos, descontoTarifa, inflacao) {\n    const economiasConsolidadas = Array(5).fill(0);\n    \n    ucs.forEach(uc => {\n      const economiaUC = this.calcularEconomia5Anos(uc, tarifaTributos, descontoTarifa, inflacao);\n      economiaUC.forEach((valor, index) => {\n        economiasConsolidadas[index] += valor;\n      });\n    });\n\n    return {\n      economiasPorAno: economiasConsolidadas,\n      economiaTotal: economiasConsolidadas.reduce((total, valor) => total + valor, 0)\n    };\n  }\n\n  adicionarEconomia5Anos(doc, dados, y, corTexto, corVerde) {\n    if (!dados.ucs || dados.ucs.length === 0 || !dados.tarifaTributos) {\n      return y;\n    }\n\n    const economiaData = this.calcularEconomiaConsolidada(\n      dados.ucs,\n      dados.tarifaTributos,\n      dados.descontoTarifa,\n      dados.inflacao\n    );\n\n    // Título\n    doc.setTextColor(...corTexto);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Economia nos próximos cinco anos', 20, y);\n    y += 6; \n\n    // Gráfico compacto\n    const graficoDados = {\n      x: 20,\n      y: y,\n      largura: 170,\n      altura: 50\n    };\n\n    const valorMaximo = Math.max(...economiaData.economiasPorAno);\n    const alturaMaximaBarra = graficoDados.altura - 15;\n    const larguraBarra = 25;\n    const espacoEntre = 5;\n    const inicioX = graficoDados.x + 15;\n\n    // Fundo do gráfico\n    doc.setDrawColor(240, 240, 240);\n    doc.setFillColor(250, 250, 250);\n    doc.rect(graficoDados.x, graficoDados.y, graficoDados.largura, graficoDados.altura, 'F');\n\n    // Desenhar barras\n    economiaData.economiasPorAno.forEach((valor, index) => {\n      const alturaRelativa = valorMaximo > 0 ? (valor / valorMaximo) * alturaMaximaBarra : 0;\n      const x = inicioX + (index * (larguraBarra + espacoEntre));\n      const y_barra = graficoDados.y + graficoDados.altura - 10 - alturaRelativa;\n\n      // Barra\n      doc.setFillColor(44, 62, 80);\n      doc.rect(x, y_barra, larguraBarra, alturaRelativa, 'F');\n\n      // Contorno\n      doc.setDrawColor(30, 50, 70);\n      doc.rect(x, y_barra, larguraBarra, alturaRelativa, 'S');\n\n      // Label do ano - CENTRALIZADO E MAIOR\n      doc.setTextColor(...corTexto);\n      doc.setFontSize(10); // Aumentado de 8 para 10\n      doc.setFont('helvetica', 'bold'); // Negrito para os anos\n      const textoAno = `Ano ${index + 1}`;\n      const larguraTextoAno = doc.getTextWidth(textoAno);\n      const xCentralizadoAno = x + (larguraBarra - larguraTextoAno) / 2;\n      doc.text(textoAno, xCentralizadoAno, graficoDados.y + graficoDados.altura - 3);\n\n      // Valor exato - FONTE MAIOR E CENTRALIZADO\n      if (alturaRelativa > 8) {\n        doc.setFontSize(8);\n        doc.setTextColor(255, 255, 255);\n        doc.setFont('helvetica', 'bold');\n        const valorFormatado = valor.toLocaleString('pt-BR', {\n          style: 'currency',\n          currency: 'BRL',\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n        });\n        \n        // Centralizar o valor na barra\n        const larguraTextoValor = doc.getTextWidth(valorFormatado);\n        const xCentralizadoValor = x + (larguraBarra - larguraTextoValor) / 2;\n        doc.text(valorFormatado, xCentralizadoValor, y_barra + 6);\n      }\n    });\n\n    y = graficoDados.y + graficoDados.altura + 10;\n\n    // Economia total\n    doc.setTextColor(...corVerde);\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'bold');\n    \n    const economiaFormatada = economiaData.economiaTotal.toLocaleString('pt-BR', {\n      style: 'currency',\n      currency: 'BRL',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    });\n\n    doc.text(`Economia Total: ${economiaFormatada}`, 20, y);\n\n    doc.setDrawColor(160, 160, 160);\n    doc.setLineWidth(0.5);\n    doc.line(20, y + 8, 190, y + 8);\n\n    return y + 15;\n  }\n\n  // Benefícios compactos - ALTERADO TÍTULO PARA \"INFORMAÇÕES E BENEFÍCIOS\"\n  adicionarBeneficiosCompactos(doc, beneficios, y, corTexto) {\n    // Se não há benefícios, pular esta seção\n    if (!beneficios || beneficios.length === 0) {\n      return y;\n    }\n    \n    doc.setTextColor(...corTexto);\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Informações e Benefícios', 20, y); // ALTERADO AQUI\n    y += 6; \n\n    // Espaço fixo para benefícios\n    const maxBeneficios = 10;\n    const alturaPorBeneficio = 4;\n    const beneficiosParaMostrar = beneficios.slice(0, maxBeneficios);\n\n    // Calcular tamanho da fonte baseado na quantidade\n    let fontSize = 9; \n    if (beneficios.length > 8) fontSize = 7;\n    if (beneficios.length > 12) fontSize = 6;\n\n    doc.setFontSize(fontSize);\n    doc.setFont('helvetica', 'normal');\n\n    beneficiosParaMostrar.forEach((beneficio, index) => {\n      // Texto completo do benefício\n      const numeroTexto = `${beneficio.numero || index + 1}.`;\n      let textoCompleto = beneficio.texto || beneficio.toString();\n      \n      // Usar splitTextToSize para quebrar o texto automaticamente em linhas\n      const textoFinal = numeroTexto + ' ' + textoCompleto;\n      const linhas = doc.splitTextToSize(textoFinal, 170); // Largura máxima de 170mm\n      \n      // Desenhar cada linha\n      linhas.forEach((linha) => {\n        // Verificar se ainda há espaço na página\n        if (y > 270) {\n          return; // Parar se chegou no final da página\n        }\n        \n        doc.text(linha, 25, y);\n        y += alturaPorBeneficio;\n      });\n      \n      // Adicionar pequeno espaço entre benefícios\n      y += 1;\n    });\n\n    // Mostrar aviso se houver mais benefícios\n    if (beneficios.length > maxBeneficios) {\n      doc.setFontSize(7);\n      doc.setTextColor(180, 0, 0);\n      doc.text(`+ ${beneficios.length - maxBeneficios} benefícios adicionais`, 25, y);\n      y += 3;\n    }\n\n    return y + 5;\n  }\n\n  // Rodapé - MODIFICADO COM IMAGENS COMPRIMIDAS\n  async adicionarRodape(doc) {\n    const pageCount = doc.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      doc.setPage(i);\n      doc.setFontSize(8);\n      doc.setTextColor(0, 0, 0);\n      \n      // Contatos à esquerda - COM SÍMBOLOS SIMPLES\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(0, 0, 0);\n      doc.setFontSize(8);\n\n      // Posicionamento dos contatos à esquerda\n      const xContatos = 15;\n      let yContatos = 277; // Ajustado para baixo\n\n      // Website \n      doc.text('*  www.aupusenergia.com.br', xContatos, yContatos);\n      yContatos += 3; // Menor espaçamento\n\n      // Email\n      doc.text('@ smart@aupusenergia.com.br', xContatos, yContatos);\n      yContatos += 3;\n\n      // WhatsApp\n      doc.text('#  (62) 9 9654-7888', xContatos, yContatos);\n      \n      // Slogan - IMAGEM CURSIVA CENTRALIZADA (COMPRESSÃO SEGURA)\n      try {\n        console.log('🖼️ Carregando slogan...');\n        // ✅ COMPRIMIR APENAS SE NÃO TIVER TRANSPARÊNCIA CRÍTICA\n        const sloganOtimizada = await this.comprimirImagem('/Frase_interligando.png', 400, 0.7, false);\n        \n        // Dimensões para PDF - centralizado\n        const alturaDesejada = 10;\n        const larguraProporcional = alturaDesejada * sloganOtimizada.aspectRatio;\n        const larguraMaxPDF = 100;\n        const larguraFinal = Math.min(larguraProporcional, larguraMaxPDF);\n        const alturaFinal = larguraFinal / sloganOtimizada.aspectRatio;\n        const xCentralizado = (210 - larguraFinal) / 2;\n        \n        // Adicionar imagem ao PDF\n        doc.addImage(sloganOtimizada.dataURL, sloganOtimizada.formato, xCentralizado, 277, larguraFinal, alturaFinal);\n        console.log(`✅ Slogan adicionado (${sloganOtimizada.formato}) ao PDF!`);\n        \n      } catch (error) {\n        console.warn('📝 Usando fallback de texto para slogan:', error.message);\n        // Fallback\n        doc.setFont('times', 'italic');\n        doc.setFontSize(11);\n        doc.setTextColor(76, 175, 80);\n        doc.text('Interligando você com o futuro!', 75, 285);\n      }\n      \n      // Imagem onda à direita - COMPRESSÃO SEGURA\n      try {\n        console.log('🌊 Carregando onda...');\n        // ✅ COMPRIMIR ONDA (sem transparência crítica)\n        const ondaOtimizada = await this.comprimirImagem('/Onda.png', 150, 0.6, false);\n        \n        // Posicionar à direita\n        const alturaDesejada = 12;\n        const larguraProporcional = alturaDesejada * ondaOtimizada.aspectRatio;\n        const larguraFinal = Math.min(larguraProporcional, 30);\n        const alturaFinal = larguraFinal / ondaOtimizada.aspectRatio;\n        const xDireita = 210 - larguraFinal - 8; // 8mm da margem direita\n        \n        // Adicionar imagem ao PDF\n        doc.addImage(ondaOtimizada.dataURL, ondaOtimizada.formato, xDireita, 275, larguraFinal, alturaFinal);\n        console.log(`✅ Imagem onda adicionada (${ondaOtimizada.formato}) ao PDF!`);\n        \n      } catch (error) {\n        console.warn('📝 Usando fallback para paginação:', error.message);\n        // Fallback - mostrar número da página\n        doc.setFont('helvetica', 'normal');\n        doc.setTextColor(0, 0, 0);\n        doc.text(`Página ${i} de ${pageCount}`, 170, 285);\n      }\n    }\n  }\n\n  // Gerar nome do arquivo\n  gerarNomeArquivo(dados) {\n    const proposta = dados.numeroProposta?.replace(/[/\\\\]/g, '_') || 'Proposta';\n    const cliente = dados.nomeCliente?.replace(/[^a-zA-Z0-9]/g, '_') || 'Cliente';\n    const timestamp = new Date().toISOString().slice(0, 10);\n    \n    return `${proposta}_${cliente}_${timestamp}.pdf`;\n  }\n\n  // Formatar dados para PDF\n  formatarDadosParaPDF(proposta) {\n    return {\n      numeroProposta: proposta.numero_proposta || proposta.numeroProposta,\n      nomeCliente: proposta.nome_cliente || proposta.nomeCliente,\n      consultor: proposta.consultor,\n      data: proposta.data_proposta || proposta.data,\n      descontoTarifa: parseFloat(proposta.desconto_tarifa || proposta.descontoTarifa) || 0.2,\n      descontoBandeira: parseFloat(proposta.desconto_bandeira || proposta.descontoBandeira) || 0.2,\n      tarifaTributos: parseFloat(proposta.tarifa_tributos || proposta.tarifaTributos) || 0.8,\n      inflacao: parseFloat(proposta.inflacao) || 0.02,\n      observacoes: proposta.observacoes || '',\n      ucs: this.formatarUCs(proposta.unidades_consumidoras || proposta.ucs || []),\n      beneficios: this.formatarBeneficios(proposta.beneficios || [])\n    };\n  }\n\n  // Formatar UCs para o PDF\n  formatarUCs(ucs) {\n    if (typeof ucs === 'string') {\n      try {\n        ucs = JSON.parse(ucs);\n      } catch (e) {\n        return [];\n      }\n    }\n    \n    if (!Array.isArray(ucs)) return [];\n    \n    return ucs.map(uc => ({\n      apelido: uc.apelido || uc.numero_unidade || 'UC',\n      numeroUC: uc.numero_unidade || uc.numeroUC || '',\n      ligacao: uc.ligacao || uc.tipo_ligacao || 'Monofásica',\n      consumo: uc.consumo_medio || uc.consumo || 0\n    }));\n  }\n\n  // Formatar benefícios para o PDF\n  formatarBeneficios(beneficios) {\n    if (typeof beneficios === 'string') {\n      try {\n        beneficios = JSON.parse(beneficios);\n      } catch (e) {\n        return [];\n      }\n    }\n    \n    if (!Array.isArray(beneficios)) return [];\n    \n    return beneficios.map((beneficio, index) => ({\n      numero: beneficio.numero || (index + 1),\n      texto: beneficio.texto || beneficio.toString()\n    }));\n  }\n\n  // Métodos estáticos\n  static async baixarPDF(dadosProposta, autoDownload = true) {\n    const generator = new PDFGenerator();\n    return await generator.gerarPDF(dadosProposta, autoDownload);\n  }\n\n  static async baixarPDFDeProposta(proposta, autoDownload = true) {\n    const generator = new PDFGenerator();\n    const dadosFormatados = generator.formatarDadosParaPDF(proposta);\n    return await generator.gerarPDF(dadosFormatados, autoDownload);\n  }\n}\n\n// Exportar para uso em outros arquivos\nexport default PDFGenerator;\n\n// Disponibilizar globalmente para compatibilidade\nif (typeof window !== 'undefined') {\n  window.PDFGenerator = PDFGenerator;\n}"],"names":["PDFGenerator","constructor","this","jsPDFLoaded","loadJsPDF","window","jspdf","console","log","Promise","resolve","reject","script","document","createElement","src","onload","onerror","Error","head","appendChild","error","comprimirPDF","doc","originalSize","output","byteLength","concat","toFixed","internal","deflate","e","warn","message","otimizarImagensExistentes","otimizarFontes","removerMetadadosDesnecessarios","compressedSize","economiaBytes","economiaPercentual","pageSize","scaleFactor","Math","min","setImageProperties","imageData","compression","quality","events","subscribe","font","metadata","description","version","trademark","setProperties","title","creator","producer","annotations","filter","annotation","type","gerarPDF","dadosProposta","autoDownload","arguments","length","undefined","numeroProposta","jsPDF","orientation","unit","format","compress","encryption","userPassword","ownerPassword","userPermissions","criarLayoutPDF","docComprimido","nomeArquivo","gerarNomeArquivo","save","finalSizeKB","pdfBlob","pdfDataUri","tamanhoKB","success","comprimirImagem","imageSrc","maxWidth","qualidade","preservarTransparencia","img","Image","crossOrigin","canvas","ctx","getContext","dataURL","formato","width","height","fillStyle","fillRect","drawImage","toDataURL","aspectRatio","dados","corAzul","corVerde","corTexto","setDrawColor","setLineWidth","rect","y","adicionarCabecalhoComLogo","adicionarInformacoesClienteCompacto","adicionarPlanoEconomiaCompacto","ucs","adicionarTabelaUCs","tarifaTributos","adicionarEconomia5Anos","beneficios","adicionarBeneficiosCompactos","adicionarRodape","setFillColor","logoOtimizada","larguraProporcional","larguraMaxima","larguraFinal","alturaFinal","addImage","setTextColor","setFontSize","setFont","text","nomeCliente","dataFormatada","data","Date","toLocaleDateString","line","descontoTarifa","round","ucsParaMostrar","slice","forEach","uc","index","consumo","parseFloat","semAssinatura","economiaMensal","economiaAnual","comAssinatura","taxaFixa","ligacao","toUpperCase","calcularTaxaFixa","nomeUC","apelido","substring","calcularEconomia5Anos","inflacao","tarifa","desconto","inflacaoDecimal","Array","fill","economias","economiaAno","ano","push","calcularEconomiaConsolidada","economiasConsolidadas","valor","economiasPorAno","economiaTotal","reduce","total","economiaData","graficoDados","x","largura","altura","valorMaximo","max","alturaMaximaBarra","inicioX","alturaRelativa","y_barra","textoAno","xCentralizadoAno","getTextWidth","valorFormatado","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","xCentralizadoValor","economiaFormatada","beneficiosParaMostrar","fontSize","beneficio","textoFinal","numero","texto","toString","splitTextToSize","linha","pageCount","getNumberOfPages","i","setPage","xContatos","yContatos","sloganOtimizada","larguraMaxPDF","xCentralizado","ondaOtimizada","xDireita","_dados$numeroProposta","_dados$nomeCliente","proposta","replace","cliente","timestamp","toISOString","formatarDadosParaPDF","numero_proposta","nome_cliente","consultor","data_proposta","desconto_tarifa","descontoBandeira","desconto_bandeira","tarifa_tributos","observacoes","formatarUCs","unidades_consumidoras","formatarBeneficios","JSON","parse","isArray","map","numero_unidade","numeroUC","tipo_ligacao","consumo_medio","baixarPDF","generator","baixarPDFDeProposta","dadosFormatados"],"sourceRoot":""}